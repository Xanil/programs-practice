#include <bits/stdc++.h>

using namespace std;
int findvertex(int* weight,bool* visited,int n){

int minvertex=-1;
for(int i=0;i<n;i++){
    if(!visited[i] && (minvertex==-1||weight[i]<weight[minvertex])){
        minvertex=i;
        }
     }
     return minvertex;
}

void prims(int** edges,int n){
int* weight=new int[n];
int *parent=new int[n];
bool* visited=new bool[n];

for(int i=0;i<n;i++){
   weight[i]=INT_MAX;
   visited[i]=false;
}

weight[0]=0;
parent[0]=-1;

for(int i=0;i<n;i++){
int minvertex=findvertex(weight,visited,n);
visited[minvertex]=true;

for(int j=0;j<n;j++){
    if(edges[minvertex][j]!=0 && !visited[j]){
        if(edges[minvertex][j]<weight[j]){
            weight[j]=edges[minvertex][j];
            parent[j]=minvertex;
        }
    }
  }
}
for(int i=1;i<n;i++){
    if(parent[i]<i){
        cout<< parent[i] << " " << i << " " << weight[i] <<endl;
    }

    else{
        cout<< i << " " << parent[i] <<"  " <<weight[i]<<endl;
    }
}
}


int main()
{
 int n,e;
 cout<<"\n enter the no of vertices and edges for graph ";
 cin>>n>>e;

 int** edges=new int*[n];

 for(int i=0;i<n;i++){

 edges[i]=new int[n];
 for(int j=0;j<n;j++){
    edges[i][j]=0;
  }
 }

 for(int i=0;i<e;i++){
    int f,s,w;
    cout<<"enter the start and end vertex along with there weight ";
    cin>>f>>s>>w;
    edges[f][s]=w;
    edges[s][f]=w;
 }
cout<<endl;
 prims(edges,n);

 for(int i=0;i<n;i++){
    delete [] edges[i];
 }
 delete[] edges;
 return 0;
}
